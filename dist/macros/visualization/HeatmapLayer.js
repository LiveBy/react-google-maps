"use strict";var u=Object.defineProperty;var d=(o,t,e)=>t in o?u(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var c=(o,t,e)=>(d(o,typeof t!="symbol"?t+"":t,e),e);Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const h=require("../../browser-99223509.cjs"),A=require("react"),M=require("../../index-5d68b4f3.cjs"),i=require("../../utils/MapChildHelper.js"),s=require("../../constants-c61a5d3d.cjs"),_=`{
  "eventMapOverrides": {
  },
  "getInstanceFromComponent": "this.state[HEATMAP_LAYER]"
}`,n=class n extends A.PureComponent{constructor(t,e){super(t,e),h.invariant(google.maps.visualization,'Did you include "libraries=visualization" in the URL?');const r=new google.maps.visualization.HeatmapLayer;i.construct(n.propTypes,l,this.props,r),r.setMap(this.context[s.MAP]),this.state={[s.HEATMAP_LAYER]:r}}componentDidMount(){i.componentDidMount(this,this.state[s.HEATMAP_LAYER],p)}componentDidUpdate(t){i.componentDidUpdate(this,this.state[s.HEATMAP_LAYER],p,l,t)}componentWillUnmount(){i.componentWillUnmount(this);const t=this.state[s.HEATMAP_LAYER];t&&t.setMap(null)}render(){return!1}};c(n,"propTypes",{__jscodeshiftPlaceholder__:null}),c(n,"contextTypes",{[s.MAP]:M.PropTypes.object});let a=n;const p={},l={};exports.HeatmapLayer=a;exports.__jscodeshiftPlaceholder__=_;exports.default=a;
