"use strict";var u=Object.defineProperty;var a=(n,e,o)=>e in n?u(n,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):n[e]=o;var i=(n,e,o)=>(a(n,typeof e!="symbol"?e+"":e,o),o);Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const h=require("react/jsx-runtime"),M=require("../browser-99223509.cjs"),P=require("react"),p=require("../index-5d68b4f3.cjs"),c=require("../utils/MapChildHelper.js"),t=require("../constants-c61a5d3d.cjs"),x=`{
  "eventMapOverrides": {
    "onCloseClick": "closeclick"
  },
  "getInstanceFromComponent": "this.context[MAP]"
}`,s=class s extends P.PureComponent{constructor(e,o){super(e,o),M.invariant(!!this.context[t.MAP],"Did you render <StreetViewPanorama> as a child of <GoogleMap> with withGoogleMap() HOC?"),c.construct(s.propTypes,d,this.props,this.context[t.MAP].getStreetView())}getChildContext(){return{[t.MAP]:this.context[t.MAP].getStreetView()}}componentDidMount(){c.componentDidMount(this,this.context[t.MAP].getStreetView(),l)}componentDidUpdate(e){c.componentDidUpdate(this,this.context[t.MAP].getStreetView(),l,d,e)}componentWillUnmount(){c.componentWillUnmount(this);const e=this.context[t.MAP].getStreetView();e&&e.setVisible(!1)}render(){const{children:e}=this.props;return h.jsx("div",{children:e})}};i(s,"propTypes",{__jscodeshiftPlaceholder__:null}),i(s,"contextTypes",{[t.MAP]:p.PropTypes.object}),i(s,"childContextTypes",{[t.MAP]:p.PropTypes.object});let r=s;const l={},d={};exports.StreetViewPanorama=r;exports.__jscodeshiftPlaceholder__=x;exports.default=r;
