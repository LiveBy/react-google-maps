"use strict";var h=Object.defineProperty;var y=(e,t,s)=>t in e?h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var p=(e,t,s)=>(y(e,typeof t!="symbol"?t+"":t,s),s);Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const O=require("../../index-c9c79dc5.cjs"),P=require("../../browser-99223509.cjs"),d=require("react"),g=require("../../index-d7652fce.cjs"),n=require("../../index-5d68b4f3.cjs"),r=require("../../utils/MapChildHelper.js"),o=require("../../constants-c61a5d3d.cjs"),i=class i extends d.PureComponent{constructor(){super(...arguments);p(this,"state",{[o.INFO_BOX]:null})}componentWillMount(){if(!O.canUseDOM||this.state[o.INFO_BOX])return;const{InfoBox:s}=require("google-maps-infobox"),c=new s;r.construct(i.propTypes,u,this.props,c),c.setMap(this.context[o.MAP]),this.setState({[o.INFO_BOX]:c})}componentDidMount(){r.componentDidMount(this,this.state[o.INFO_BOX],l),this.content=document.createElement("div"),this.forceUpdate(),this.state[o.INFO_BOX].setContent(this.content),m(this.state[o.INFO_BOX],this.context[o.ANCHOR])}componentDidUpdate(s){r.componentDidUpdate(this,this.state[o.INFO_BOX],l,u,s)}componentWillUnmount(){r.componentWillUnmount(this);const s=this.state[o.INFO_BOX];s&&s.setMap(null)}render(){return!!this.content&&g.ReactDOM.ceatePortal(d.Children.only(this.props.children),this.content)}getPosition(){return this.state[o.INFO_BOX].getPosition()}getVisible(){return this.state[o.INFO_BOX].getVisible()}getZIndex(){return this.state[o.INFO_BOX].getZIndex()}};p(i,"propTypes",{defaultOptions:n.PropTypes.any,defaultPosition:n.PropTypes.any,defaultVisible:n.PropTypes.bool,defaultZIndex:n.PropTypes.number,options:n.PropTypes.any,position:n.PropTypes.any,visible:n.PropTypes.bool,zIndex:n.PropTypes.number,onCloseClick:n.PropTypes.func,onDomReady:n.PropTypes.func,onContentChanged:n.PropTypes.func,onPositionChanged:n.PropTypes.func,onZindexChanged:n.PropTypes.func}),p(i,"contextTypes",{[o.MAP]:n.PropTypes.object,[o.ANCHOR]:n.PropTypes.object});let a=i;const m=(e,t)=>{t?e.open(e.getMap(),t):e.getPosition()?e.open(e.getMap()):P.invariant(!1,"You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoBox>.")},l={onCloseClick:"closeclick",onDomReady:"domready",onContentChanged:"content_changed",onPositionChanged:"position_changed",onZindexChanged:"zindex_changed"},u={options(e,t){e.setOptions(t)},position(e,t){e.setPosition(t)},visible(e,t){e.setVisible(t)},zIndex(e,t){e.setZIndex(t)}};exports.InfoBox=a;exports.default=a;
